name: Auto-Close PR on Merge Conflict

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: # Keep for manual testing

jobs:
  close_conflicting_pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # This permission is essential for closing PRs and adding comments

    steps:
      - name: Debug: Print event payload
        run: |
          echo "GitHub Event Payload:"
          echo "${{ toJson(github.event) }}" | jq . # Print the entire event payload for inspection

      - name: Check for merge conflicts
        id: check_conflicts
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}
          TOKEN=${{ secrets.GITHUB_TOKEN }}

          echo "Debugging PR Number: $PR_NUMBER"
          echo "Debugging Repository: $REPO"

          echo "Fetching PR details for PR #$PR_NUMBER..."

          # Fetch PR details using GitHub API to check mergeable state
          # Add -v (verbose) to curl for more debugging info if needed, but remove for production
          PR_DETAILS=$(curl -s -H "Authorization: token $TOKEN" \
                       "https://api.github.com/repos/$REPO/pulls/$PR_NUMBER")

          echo "Raw PR_DETAILS JSON response:"
          echo "$PR_DETAILS" | jq . # Pretty print the JSON for readability

          MERGEABLE=$(echo "$PR_DETAILS" | jq -r '.mergeable')
          MERGEABLE_STATE=$(echo "$PR_DETAILS" | jq -r '.mergeable_state')

          echo "Mergeable state: $MERGEABLE_STATE"
          echo "Mergeable: $MERGEABLE"

          # GitHub might take a moment to determine mergeable_state
          # Loop to wait for mergeable_state to be determined if it's 'unknown'
          ATTEMPTS=0
          MAX_ATTEMPTS=5
          while [[ "$MERGEABLE_STATE" == "unknown" && $ATTEMPTS -lt $MAX_ATTEMPTS ]]; do
            echo "Mergeable state is 'unknown'. Waiting 5 seconds and trying again (attempt $((ATTEMPTS + 1))/$MAX_ATTEMPTS)..."
            sleep 5
            PR_DETAILS=$(curl -s -H "Authorization: token $TOKEN" \
                         "https://api.github.com/repos/$REPO/pulls/$PR_NUMBER")
            MERGEABLE_STATE=$(echo "$PR_DETAILS" | jq -r '.mergeable_state')
            MERGEABLE=$(echo "$PR_DETAILS" | jq -r '.mergeable')
            ATTEMPTS=$((ATTEMPTS + 1))
          done

          if [[ "$MERGEABLE" == "false" && "$MERGEABLE_STATE" == "dirty" ]]; then
            echo "has_conflicts=true" >> "$GITHUB_OUTPUT"
            echo "PR has conflicts. Setting output 'has_conflicts' to true."
          else
            echo "has_conflicts=false" >> "$GITHUB_OUTPUT"
            echo "PR does not have conflicts, or state is not 'dirty'. Setting output 'has_conflicts' to false."
          fi

      - name: Close PR if conflicts found
        if: steps.check_conflicts.outputs.has_conflicts == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}

          echo "Closing pull request #$PR_NUMBER due to conflicts."
          curl -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/$REPO/pulls/$PR_NUMBER" \
               -d '{"state": "closed"}'

          echo "Adding a comment to the PR."
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments" \
               -d '{"body": "This pull request has conflicts that need to be resolved. It has been automatically closed. Please rebase your branch and open a new pull request."}'
